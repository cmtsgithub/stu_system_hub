<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.stu.mapper.StuScMapper" >
  <resultMap id="BaseResultMap" type="com.stu.pojo.StuSc" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="time" property="time" jdbcType="VARCHAR" />
    <result column="stu_id" property="stuId" jdbcType="CHAR" />
    <result column="course_id" property="courseId" jdbcType="INTEGER" />
    <result column="grade_id" property="gradeId" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="created" property="created" jdbcType="TIMESTAMP" />
    <result column="updated" property="updated" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, time, stu_id, course_id, grade_id, status, created, updated
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from stu_sc
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from stu_sc
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.stu.pojo.StuSc" >
    insert into stu_sc (id, time, stu_id, 
      course_id, grade_id, status, 
      created, updated)
    values (#{id,jdbcType=INTEGER}, #{time,jdbcType=VARCHAR}, #{stuId,jdbcType=CHAR}, 
      #{courseId,jdbcType=INTEGER}, #{gradeId,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, 
      #{created,jdbcType=TIMESTAMP}, #{updated,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.stu.pojo.StuSc" >
    insert into stu_sc
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="time != null" >
        time,
      </if>
      <if test="stuId != null" >
        stu_id,
      </if>
      <if test="courseId != null" >
        course_id,
      </if>
      <if test="gradeId != null" >
        grade_id,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="created != null" >
        created,
      </if>
      <if test="updated != null" >
        updated,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="time != null" >
        #{time,jdbcType=VARCHAR},
      </if>
      <if test="stuId != null" >
        #{stuId,jdbcType=CHAR},
      </if>
      <if test="courseId != null" >
        #{courseId,jdbcType=INTEGER},
      </if>
      <if test="gradeId != null" >
        #{gradeId,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="created != null" >
        #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="updated != null" >
        #{updated,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.stu.pojo.StuSc" >
    update stu_sc
    <set >
      <if test="time != null" >
        time = #{time,jdbcType=VARCHAR},
      </if>
      <if test="stuId != null" >
        stu_id = #{stuId,jdbcType=CHAR},
      </if>
      <if test="courseId != null" >
        course_id = #{courseId,jdbcType=INTEGER},
      </if>
      <if test="gradeId != null" >
        grade_id = #{gradeId,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="created != null" >
        created = #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="updated != null" >
        updated = #{updated,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.stu.pojo.StuSc" >
    update stu_sc
    set time = #{time,jdbcType=VARCHAR},
      stu_id = #{stuId,jdbcType=CHAR},
      course_id = #{courseId,jdbcType=INTEGER},
      grade_id = #{gradeId,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      created = #{created,jdbcType=TIMESTAMP},
      updated = #{updated,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>